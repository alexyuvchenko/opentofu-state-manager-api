name: opentofu-state-manager
services:
  postgres:
    container_name: ${PROJECT_NAME}-postgres
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready --username=${DB_USERNAME} && PGPASSWORD=${DB_PASSWORD} psql --username=${DB_USERNAME} --list"
      start_period: 3s
      timeout: 2s
      interval: 3s
      retries: 3
    networks:
      - net

  minio:
    container_name: ${PROJECT_NAME}-minio
    image: minio/minio
    ports:
      - "9000:9000"  # default port
      - "9001:9001"  # console port
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address :9001
    healthcheck:
      test: "curl -f http://localhost:9000/minio/health/live"
      start_period: 3s
      timeout: 2s
      interval: 3s
      retries: 3
    networks:
      - net

  api:
    container_name: ${PROJECT_NAME}-api
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: ${PROJECT_NAME}-api:latest
    platform: linux/amd64
    environment:
      DEBUG: ${DEBUG}
      PYTHONASYNCIODEBUG: ${PYTHONASYNCIODEBUG}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_SECURE: ${MINIO_SECURE}
      APP_NAME: ${APP_NAME}
      APP_DESCRIPTION: ${APP_DESCRIPTION}
      APP_VERSION: ${APP_VERSION}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FORMAT: ${LOG_FORMAT}
      DB_ECHO: ${DB_ECHO}
      PYTHONPATH: ${PYTHONPATH}
      API_TOKEN: ${API_TOKEN}
    ports:
      - "8080:8000"
    volumes:
      - ../src:/app/src
      - ../scripts:/app/scripts
      - ../migrations:/app/migrations
    working_dir: /app
    command: ["/bin/sh", "-c", "chmod +x /app/scripts/start.sh && /app/scripts/start.sh"]
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - net

volumes:
  postgres_data:
  minio_data:

networks:
  net:
    driver: bridge
